# This is a bit complex with multiple jobs.
# https://circleci.com/docs/2.0/local-cli/ will let you test this locally
version: 2
workflows:
  version: 2
  test:
    jobs:
      - typescript
      - golang
      - rust
      - lint-rust
      - solidity

jobs:
  typescript:
    docker:
      - image: circleci/node:dubnium
    working_directory: ~/proofs/js
    steps:
      # we checkout here, all other code runs in js subdir
      - checkout:
          path: ~/proofs
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test
  golang:
    docker:
      # specify the version
      - image: circleci/golang:1.14
    environment:
      GO111MODULE=on
    working_directory: ~/proofs/go
    steps:
      # we checkout here, all other code runs in go subdir
      - checkout:
          path: ~/proofs
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: make test
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  rust:
    docker:
      - image: rust:1.42
    working_directory: ~/proofs/rust
    steps:
      - checkout:
          path: ~/proofs
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Check all targets in std
          command: cargo check --all
      - run:
          name: Check all target in no_std
          command: cargo check --no-default-features --all
      - run:
          name: Build all targets in std
          command: cargo build --all --all-targets
      - run:
          name: Build all targets in no_std
          command: cargo build --all --no-default-features
      - run:
          name: Run all tests with no-std
          command: cargo test --all --no-default-features
      - run:
          name: Run all tests with std
          command: cargo test --all
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: cargo test --all

  lint-rust:
    docker:
      - image: rust:1.42
    working_directory: ~/proofs/rust
    steps:
      - checkout:
          path: ~/proofs
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.42.0-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --tests -- -D warnings
      - run:
          name: Clippy linting on workspace (no-std)
          command: cargo clippy --tests --no-default-features -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.42.0-{{ checksum "Cargo.lock" }}

  solidity:
    docker:
      - image: circleci/golang:1.14
    environment:
      GO111MODULE=on
    working_directory: ~/proofs/sol
    steps:
      # we checkout here, all other code runs in go subdir
      - checkout:
          path: ~/proofs
      - restore_cache:
          keys:
            - solidity-{{ checksum "ics23.json" }}
      - run: go test ./...
      - save_cache:
          key: solidity-{{ checksum "ics23.json" }}
          paths:
            - "/sol"
